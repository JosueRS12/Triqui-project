{"version":3,"sources":["components/game/board.js","assets/GLUD_LOGO.svg","index.js"],"names":["Square","props","useState","value","setValue","type","onClick","id","square","document","getElementById","turn","disabled","count","setCombinationsX","add","VerifyEndGame","setCombinationsO","console","log","ChangeValueSquare","className","i","Set","setWinningCombinations","moves","setPlayerMovements","player","alert","prototype","isSuperset","subset","elem","this","has","combination","WinningCombinations","Amor","target","href","rel","HowToUseHooks","setCount","colors","useEffect","Math","floor","random","body","style","backgroundColor","title","Board","state","board","resetBoard","bind","push","length","setState","fillSquare","map","element","React","Component","Layout","Navbar","expand","Container","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","NavDropdown","Item","Row","Col","Image","src","logoGlud","fluid","Style","ReactDOM","render"],"mappings":"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","file":"static/js/main.44a70c57.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './board.css';\nfunction Square(props){\n  const [value,setValue] = useState('');\n  return(\n    <button type=\"button\" onClick={()=>setValue(ChangeValueSquare(props.id, value))} id={props.id} className=\"square\" >\n      {value} \n    </button>\n  );\n}\n\n\n//change value of squares\nlet i = 1;\nconsole.log(i);\ni++;\nlet turn = false;\nlet count = 0;\n//values for player combinations\nlet setCombinationsX = new Set();\nlet setCombinationsO = new Set();\n//two players: X and O\nfunction ChangeValueSquare(id, value){ \n  var square = document.getElementById(id);\n  //console.log(id);\n  //if(count === 9)\n    //count = 0;\n  if(turn){\n    //movement player x => true\n    square.disabled = true;\n    turn = !turn;\n    count++;\n    setCombinationsX.add(id);\n    VerifyEndGame(count, setCombinationsX, 'X');\n    return 'X'; \n  }else{ //movement player o => false\n    square.disabled = true;\n    turn = !turn;\n    count++;\n    setCombinationsO.add(id);\n    console.log(`o ${setCombinationsO}`);\n    //console.log('O '+id);\n    VerifyEndGame(count, setCombinationsO, 'O');\n    return 'O';\n  }\n}\n//verify winner\n//primero verificar que todos los botones esten deshabilitados, de ese modo se\n//sabe que el juego terminó: Cuando count es = 9, todos se encuentrar\n//deshabilitados.\n//segundo crear las combinaciones posibles para ganar.\n//comprobrar si el player X ó el player O es el ganador.\n\n//winning combinations\n\nconst setWinningCombinations = new Set([\n\n                    [0,1,2],\n                    [3,4,5],\n                    [6,7,8],\n                    [0,3,6],\n                    [1,4,7],\n                    [2,5,8],\n                    [2,4,6],\n                    [0,4,8] \n]);\n\nconst WinningCombinations = (setPlayerMovements, player) => {\n  // pasar un array con los indices\n  // position\n  ///////////////////////\n  // 0 1 2 WIN             // 0 1 2 WIN\n  // 3 4 5 WIN consecutivos// 3 4 5 WIN\n  // 6 7 8 WIN horizontales// 6 7 8\n  ///////////////////////\n  // 0     //     2  ////\n  //   4   //   4    ///\n  //     8 //6       ////  \n   \n  // eslint-disable-next-line\n  Set.prototype.isSuperset = function(subset) {\n      for (var elem of subset) {\n          if (!this.has(elem)) {\n              return false;\n          }\n      }\n      return true;\n  }\n\n  //verify if the player movements are the winning combinations\n  for (let combination of setWinningCombinations){\n    if(setPlayerMovements.isSuperset(combination)){\n      return true;\n    }\n  } \n\n  //console.log(setWinningCombinations);\n  \n  //let resultVerify = setVerify.isSuperset(setWinningCombinations); \n  //console.log(resultVerify);\n  //la combinación 1, 4, 7 no ganó\n\n  //console.log('combiWin values: '+combiWin.values());\n\n\n  //iterando\n  //combiWin.forEach((e)=>{\n    //console.log(e, typeof(e));\n  //});\n  \n  ////solución con map e includes\n  //let condition = combinations.includes(comb.map((e)=> {\n    //console.log(e);\n    //return e\n  //}));\n  //console.log(condition);\n  //if(condition){\n    \n    //return true; \n  //} \n  //else\n    //return false;\n\n\n  //solución con set ----------------------------------------------------\n  //ordenamiento in place\n  //console.log('set comb: '+ combiWin.has('2,4,6'));\n  //console.log([...combinationWinner]);\n  //comb.sort((a,b)=>{\n    //return a - b;\n  //});\n  //console.log(playerMovements+\" \"+player);\n  //const test = new Set([0,1,2]);\n  //console.log('test '+typeof(test));\n  //console.log('type combination winner '+typeof(combinationWinner));\n  //console.log(combinationWinner);\n  //console.log('has '+combinationWinner.isSuperset(test));\n\n  //console.log('comb ordened: '+comb);\n  //console.log(combinationWinner.has(playerMovements));\n  //return combinationWinner.has(playerMovements);\n  //-----------------------------------------------------------------------\n\n\n  //combinations.map((currentValue, index)=>{\n    ////console.log(comb)\n    ////comb => array con las combinaciones\n    //if(currentValue === comb)\n      //return currentValue;\n    //else\n      //return null;\n  //});\n}\n\n//verify end game\nfunction VerifyEndGame(moves, setPlayerMovements, player){\n  if(moves === 10){\n    alert('limite de movimientos');\n  }\n  else if(WinningCombinations(setPlayerMovements, player)){\n    alert(`ganó el jugador ${player}`);\n  }\n}\n//amorcito\n\nconst Amor = (props) =>{\n  return (\n    <div>\n      <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=5j2FE_K-rAA\" rel=\"noreferrer\"> QUIERO...</a>   \n    </div>\n  ); \n}\n\n//hooks structure\nfunction HowToUseHooks(props){\n  //useState\n  //se inicializa la variable de estado que se desea usar\n  //se define el nombre (arbitrario) de la variable y su setter\n  const [count, setCount] = useState(0);\n  // useEffect\n  const colors = ['yellow', 'black', 'blue', 'green', 'cyan', 'orange', 'red'];\n  console.log(colors[0]); \n  // useEffect\n  useEffect(() => {\n    if(count>0){\n      let i = Math.floor(Math.random() * 7);\n      console.log(i);\n      document.body.style.backgroundColor=`${colors[i]}`;\n      document.title = `you clicked ${count} times`;\n      console.log(`hola ${count}`);\n    }\n  }, [count]); \n  return(\n    <div>\n      {count === 8 ? <Amor/> : null}\n      <p> valor acutal del button {count} </p>\n      <button type =\"button\" onClick={() => setCount(count+1)}>\n      click on me\n      </button>\n    </div>\n  );\n}\n\n\nexport default class Board extends React.Component{\n  \n  \n  constructor(props){\n    super(props);\n    this.state = {\n      board: [],\n      value: 0\n    };\n    this.resetBoard =  this.resetBoard.bind(this);\n  }\n  /*\n    0   1   2   \n    3   4   5   \n    6   7   8      \n    \n  */\n  \n  fillSquare(i){\n    for(let i = 0; i < 9; i++){\n      this.state.board.push(<Square id={i}/>);\n    }\n  }\n\n  componentDidUpdate(){\n    if(this.state.board.length>9){\n      this.resetBoard();\n\n    }\n  }\n\n  resetBoard(){ \n    this.setState({\n      board: [],\n      value: this.state.value+1\n    });\n\n    turn = false;\n    count = 0;\n    setCombinationsO = new Set();\n    setCombinationsX = new Set();\n\n    //combX = [];\n    //combO = [];\n    //this.state.board.forEach((e)=>{\n      //console.log(e, typeof(e));\n    //});\n    //this.state.board.splice(0);\n    //this.state.board.forEach((e)=>{\n      //console.log(e, typeof(e));\n    //});\n  }\n  \n  \n  render(){\n    this.fillSquare();\n    return(\n      <div className=\"board\"  key={this.state.value}>\n        <h1>¿JUEGAS?</h1>\n        <HowToUseHooks/>\n        <h3>Testing</h3> \n          <div className=\"all-grid\">\n            <div className=\"grid-squares\">\n              <div className=\"fil\">\n                {this.state.board.map((element, i)=> { const fil = i<3? <div className=\"butt\" key={i}> {element} </div> : null; return fil;\n              })}     \n              </div>\n              <div className=\"fil\">\n                {this.state.board.map((element, i)=> {\n                 const fil = (i>=3 && i<6)? <div className=\"butt\" key={i}> {element} </div> : null; \n                  return fil;\n              })}     \n              </div>\n              <div className=\"fil\"> \n                {this.state.board.map((element, i)=> {\n                const fil = (i>=6 && i<9)? <div className=\"butt\" key={i}> {element} </div> : null; \n                return fil;\n              })}     \n              </div> \n            </div>\n          </div>\n          <div> \n            <button type=\"button\" className=\"resetButton\" onClick={this.resetBoard}> ResetGame </button>\n          </div>\n      </div>\n    );\n  }\n\n}\n","export default __webpack_public_path__ + \"static/media/GLUD_LOGO.b91a64c5.svg\";","//librerias de react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n//vincular el css\nimport './index.css';\nimport Board from './components/game/board';\nimport logoGlud from './assets/GLUD_LOGO.svg';\n//vincular boostrap\nimport {Image, Col, Row, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nconst Layout = (props) =>{\n  return (\n    <main>\n      <header>\n        <Navbar expand=\"lg\" className=\"decorate-header\">\n        <Container className=\"size-nav\"> \n          <Navbar.Brand>Triqui App</Navbar.Brand> \n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" /> \n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link eventKey=\"link-1\" href=\"https://github.com/JosueRS12/Triqui-project\" target=\"_blank\">Repositorio</Nav.Link>\n              <NavDropdown title=\"Contacto\" id=\"navbarScrollingDropdown\">\n                  <NavDropdown.Item href=\"https://github.com/JosueRS12\" target=\"_blank\">Github</NavDropdown.Item>\n                  <NavDropdown.Item href=\" https://www.linkedin.com/in/josu%C3%A9-rodr%C3%ADguez-720095218\" target=\"_blank\">Linkedin</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n        </Navbar>\n      </header>\n      <section id=\"game\">\n        <Board/>\n      </section>\n      \n      <footer>\n        <Container>\n          <Row>\n            <Col className=\"size\">\n              <Image className=\"decorate-img\"src={logoGlud} fluid/> \n            </Col>\n            <Col className=\"size\">\n              <div className=\"font-footer\">\n                <h5 Style=\"color: white\"> GNU LINUX UNIVERSIDAD DISTRITAL</h5>\n                <p>\n                  Hecho por Josue Rodriguez usando <br/>\n                  ReactJS con Bootstrap4\n                </p>\n              </div>\n            </Col>\n            <Col className=\"size align-social\">\n              <a href=\"https://github.com/JosueRS12/\" className=\"social github\"></a>\n              <a href=\"https://www.linkedin.com/in/josu%C3%A9-rodr%C3%ADguez-720095218\" className=\"social linkedin\"></a>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </main>    \n  );\n}\n\nexport default Layout;\n\nReactDOM.render(\n  <Layout/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}